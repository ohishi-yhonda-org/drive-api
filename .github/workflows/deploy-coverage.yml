name: Sync to Public and Deploy Coverage

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  sync-to-public:
    runs-on: [self-hosted, Windows, X64, test]
    steps:
      - name: Sync to Public Repository
        run: |
          # Set Git path
          $env:PATH = "C:\Program Files\Git\bin;C:\Program Files\Git\cmd;" + $env:PATH
          
          # Configure git
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          
          # Clone private repository to temp directory
          $tempDir = Join-Path $env:TEMP ("sync-" + (Get-Date -Format "yyyyMMddHHmmss"))
          Write-Host "Cloning to: $tempDir"
          git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/ohishi-yhonda-org/drive-api.git $tempDir
          cd $tempDir
          
          # Get list of files to remove from .gitattributes
          $filesToRemove = @()
          if (Test-Path .gitattributes) {
            Get-Content .gitattributes | ForEach-Object {
              if ($_ -match '^(.+?)\s+filter=git-crypt') {
                $filesToRemove += $matches[1]
              }
            }
          }
          
          # Remove sensitive files
          foreach ($file in $filesToRemove) {
            if (Test-Path $file) {
              Remove-Item $file -Force
              Write-Host "Removed: $file"
            }
          }
          
          # Remove .gitattributes
          if (Test-Path .gitattributes) {
            Remove-Item .gitattributes -Force
            Write-Host "Removed: .gitattributes"
          }
          
          # Stage and commit changes
          git add -A
          git commit -m "Remove sensitive files for public repository" --allow-empty
          
          # Add public remote and push
          git remote add public https://x-access-token:${{ secrets.PUBLIC_REPO_TOKEN }}@github.com/ohishi-yhonda-pub/drive-api.git
          git push public HEAD:main --force
          
          # Cleanup
          cd ..
          Remove-Item -Recurse -Force $tempDir

  deploy-coverage:
    needs: sync-to-public
    runs-on: [self-hosted, Windows, X64, test]
    steps:
      - name: Checkout public repository
        uses: actions/checkout@v4
        with:
          repository: ohishi-yhonda-pub/drive-api
          token: ${{ secrets.PUBLIC_REPO_TOKEN }}
      
      - name: Setup Git
        run: |
          $env:PATH = "C:\Program Files\Git\bin;C:\Program Files\Git\cmd;" + $env:PATH
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
      
      - name : set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm install
        
      - name: Run tests and generate coverage
        run: npm run test:coverage
        
      - name: Generate API documentation
        run: npm run generate:docs
      
      - name: Prepare GitHub Pages content
        run: |
          # Create gh-pages directory structure
          mkdir gh-pages
          mkdir gh-pages/coverage
          
          # Copy coverage report to subdirectory
          Copy-Item -Recurse coverage/* gh-pages/coverage/
          
          # Copy API documentation to root
          if (Test-Path docs) {
            Copy-Item -Recurse docs/* gh-pages/
          }
          
          # Create index.html for root
          $indexHtml = @"
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Google Drive API - Documentation</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        h1 { color: #333; }
        .card { border: 1px solid #ddd; padding: 20px; margin: 20px 0; border-radius: 8px; }
        a { text-decoration: none; color: #0066cc; }
        a:hover { text-decoration: underline; }
    </style>
</head>
<body>
    <h1>Google Drive API - Documentation</h1>
    <div class="card">
        <h2>Test Coverage Report</h2>
        <p>View detailed test coverage metrics and reports</p>
        <a href="./coverage/index.html">View Coverage Report</a>
    </div>
    <div class="card">
        <h2>API Documentation</h2>
        <p>Interactive Swagger UI documentation for all API endpoints</p>
        <a href="./api.html">View API Documentation</a>
    </div>
</body>
</html>
"@
          [System.IO.File]::WriteAllText("$PWD/gh-pages/index.html", $indexHtml, [System.Text.Encoding]::UTF8)
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.PUBLIC_REPO_TOKEN }}
          publish_dir: gh-pages
          publish_branch: gh-pages
          force_orphan: true
          external_repository: ohishi-yhonda-pub/drive-api
        env:
          PATH: "C:\\Program Files\\Git\\bin;C:\\Program Files\\Git\\cmd;${{ env.PATH }}"