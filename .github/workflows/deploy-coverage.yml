name: Sync to Public and Deploy Coverage

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  sync-to-public:
    runs-on: [self-hosted, Windows, X64, test]
    steps:
      - name: Checkout private repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Setup Git
        run: |
          $env:PATH = "C:\Program Files\Git\bin;C:\Program Files\Git\cmd;" + $env:PATH
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
      
      - name: Remove sensitive files and push to public
        run: |
          # Use full path to Git
          $git = "C:\Program Files\Git\cmd\git.exe"
          
          # Clone to temporary directory to preserve commit history
          $tempDir = New-TemporaryFile | %{ rm $_; mkdir $_ }
          & $git clone . $tempDir
          cd $tempDir
          
          # Get list of files marked for encryption in .gitattributes
          $encryptedFiles = @()
          if (Test-Path .gitattributes) {
            Get-Content .gitattributes | ForEach-Object {
              if ($_ -match '^(.+?)\s+filter=git-crypt') {
                $encryptedFiles += $matches[1]
              }
            }
          }
          
          # Remove encrypted files from all commits
          $filterCommand = "& '$git' filter-branch --force --index-filter '"
          foreach ($file in $encryptedFiles) {
            $filterCommand += "git rm --cached --ignore-unmatch $file; "
          }
          $filterCommand += "git rm --cached --ignore-unmatch .gitattributes"
          $filterCommand += "' --prune-empty --tag-name-filter cat -- --all"
          
          Invoke-Expression $filterCommand
          
          # Add public remote and push
          & $git remote add public https://x-access-token:${{ secrets.PUBLIC_REPO_TOKEN }}@github.com/ohishi-yhonda-pub/drive-api.git
          & $git push public main --force
          
          # Cleanup
          cd ..
          Remove-Item -Recurse -Force $tempDir

  deploy-coverage:
    needs: sync-to-public
    runs-on: [self-hosted, Windows, X64, test]
    steps:
      - name: Checkout public repository
        uses: actions/checkout@v4
        with:
          repository: ohishi-yhonda-pub/drive-api
          token: ${{ secrets.PUBLIC_REPO_TOKEN }}
      
      - name: Setup Git
        run: |
          $env:PATH = "C:\Program Files\Git\bin;C:\Program Files\Git\cmd;" + $env:PATH
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
      - name : set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Run tests and generate coverage
        run: npm run test:coverage
      

      - name: Deploy coverage to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.PUBLIC_REPO_TOKEN }}
          publish_dir: coverage
          publish_branch: gh-pages
          force_orphan: true
          external_repository: ohishi-yhonda-pub/drive-api
        env:
          PATH: "C:\\Program Files\\Git\\bin;C:\\Program Files\\Git\\cmd;${{ env.PATH }}"